/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import Conexion.Conexion;
import java.io.InputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Personal
 */
public class JIF_ProductosVendidos extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIF_ProductosVendidos
     */
    public JIF_ProductosVendidos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jb_GenerarInforme = new javax.swing.JButton();
        jp_Fecha = new javax.swing.JPanel();
        jl_InfoFechaFinal = new javax.swing.JLabel();
        jl_InfoFechaInicio = new javax.swing.JLabel();
        wdf_FechaFinal = new com.alee.extended.date.WebDateField();
        wdf_FechaInicio = new com.alee.extended.date.WebDateField();
        jb_FechaFinal = new javax.swing.JButton();
        jb_FechaActual = new javax.swing.JButton();
        jp_Tipo = new javax.swing.JPanel();
        jl_InfoTipo = new javax.swing.JLabel();
        jcb_Tipo = new javax.swing.JComboBox();
        jcb_Datos = new javax.swing.JComboBox();
        jl_InfoNombre = new javax.swing.JLabel();
        jl_Nombre = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Informe - Productos vendidos");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jb_GenerarInforme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imágenes/img_reporte.png"))); // NOI18N
        jb_GenerarInforme.setText("Generar informe");
        jb_GenerarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_GenerarInformeActionPerformed(evt);
            }
        });

        jp_Fecha.setBorder(javax.swing.BorderFactory.createTitledBorder("Fecha"));

        jl_InfoFechaFinal.setText("Fecha final");

        jl_InfoFechaInicio.setText("Fecha de inicio");

        wdf_FechaFinal.setEditable(false);
        wdf_FechaFinal.setToolTipText("Haga clic en el calendario para seleccionar la fecha final");

        wdf_FechaInicio.setEditable(false);
        wdf_FechaInicio.setToolTipText("Haga clic en el calendario para seleccionar la fecha de inicio");

        jb_FechaFinal.setText("...");
        jb_FechaFinal.setToolTipText("Cargar la fecha actual");
        jb_FechaFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_FechaFinalActionPerformed(evt);
            }
        });

        jb_FechaActual.setText("...");
        jb_FechaActual.setToolTipText("Cargar la fecha actual");
        jb_FechaActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_FechaActualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_FechaLayout = new javax.swing.GroupLayout(jp_Fecha);
        jp_Fecha.setLayout(jp_FechaLayout);
        jp_FechaLayout.setHorizontalGroup(
            jp_FechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_FechaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_FechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_FechaLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jl_InfoFechaInicio))
                    .addGroup(jp_FechaLayout.createSequentialGroup()
                        .addComponent(wdf_FechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_FechaActual, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_FechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_FechaLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(wdf_FechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_FechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jl_InfoFechaFinal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp_FechaLayout.setVerticalGroup(
            jp_FechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_FechaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_FechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_InfoFechaInicio)
                    .addComponent(jl_InfoFechaFinal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_FechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_FechaActual)
                    .addComponent(jb_FechaFinal)
                    .addComponent(wdf_FechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wdf_FechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jb_FechaActual.requestFocus();

        jp_Tipo.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo"));

        jl_InfoTipo.setText("Productos vendidos por o a:");

        jcb_Tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tienda", "Empleado", "Cliente" }));
        jcb_Tipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_TipoItemStateChanged(evt);
            }
        });

        jcb_Datos.setEditable(true);
        jcb_Datos.setToolTipText("<html>Seleccione el número de la tienda, sino lo conoce<p>dirijase a la ventana principal y seleccione<p>Buscar -> Tienda</html>");
        jcb_Datos.setEnabled(false);
        jcb_Datos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_DatosItemStateChanged(evt);
            }
        });

        jl_InfoNombre.setText("Nombre");

        javax.swing.GroupLayout jp_TipoLayout = new javax.swing.GroupLayout(jp_Tipo);
        jp_Tipo.setLayout(jp_TipoLayout);
        jp_TipoLayout.setHorizontalGroup(
            jp_TipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_TipoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_TipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcb_Datos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jp_TipoLayout.createSequentialGroup()
                        .addComponent(jl_InfoTipo)
                        .addGap(18, 18, 18)
                        .addComponent(jcb_Tipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jp_TipoLayout.createSequentialGroup()
                        .addGroup(jp_TipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jl_InfoNombre)
                            .addComponent(jl_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jp_TipoLayout.setVerticalGroup(
            jp_TipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_TipoLayout.createSequentialGroup()
                .addGroup(jp_TipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jl_InfoTipo)
                    .addComponent(jcb_Tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcb_Datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_InfoNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jl_Nombre)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        AutoCompleteDecorator.decorate(this.jcb_Datos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jp_Fecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jp_Tipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jb_GenerarInforme)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jp_Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jp_Tipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jb_GenerarInforme)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_GenerarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_GenerarInformeActionPerformed
        if (wdf_FechaFinal.getText().length() > 0 && wdf_FechaInicio.getText().length() > 0) {
            Date fechaInicio = wdf_FechaInicio.getDate();
            Date fechaFinal = wdf_FechaFinal.getDate();
            if (fechaInicio.after(fechaFinal) && fechaInicio.equals(fechaFinal)) {
                JOptionPane.showMessageDialog(this, "La fecha final es anterior a la fecha inicial", "Error en selección", JOptionPane.ERROR_MESSAGE);
                wdf_FechaFinal.setText((new SimpleDateFormat("dd.MM.yyyy")).format(new Date()));
                wdf_FechaInicio.setText((new SimpleDateFormat("dd.MM.yyyy")).format(new Date()));
            } else {
                String item = jcb_Tipo.getSelectedItem().toString();
                String fechaIni = (new SimpleDateFormat("yyyy-MM-dd")).format(wdf_FechaInicio.getDate()) + " 00:00:00";
                String fechaFin = (new SimpleDateFormat("yyyy-MM-dd")).format(wdf_FechaFinal.getDate()) + " 23:59:59";
                String nombre = jl_Nombre.getText();
                if (item.equals("Tienda")) {
                    try {
                        Map map = new HashMap(10);
                        map.put("IDTIENDA", Frm_Principal.idTienda);
                        map.put("FECHAINI", fechaIni);
                        map.put("FECHAFIN", fechaFin);
                        InputStream input = this.getClass().getResourceAsStream("/Reportes/rep_productosVendidosT.jrxml");
                        JasperDesign design = JRXmlLoader.load(input);
                        JasperReport report = JasperCompileManager.compileReport(design);
                        Conexion c = new Conexion();
                        JasperPrint print = JasperFillManager.fillReport(report, map, c.c);
                        JasperViewer.viewReport(print, false);
                    } catch (ClassNotFoundException | SQLException | JRException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Error reporte", JOptionPane.ERROR_MESSAGE);
                        ex.printStackTrace();
                    }
                } else {
                    try {
                        String cod = map.get(nombre);
                        Map map = new HashMap(10);
                        map.put("TIPO", item);
                        map.put("NOMBRE", nombre);
                        map.put("DOCUMENTO", cod);
                        map.put("IDTIENDA", Frm_Principal.idTienda);
                        map.put("FECHAINI", fechaIni);
                        map.put("FECHAFIN", fechaFin);
                        InputStream input = this.getClass().getResourceAsStream("/Reportes/rep_productosVendidosEC.jrxml");
                        JasperDesign design = JRXmlLoader.load(input);
                        JasperReport report = JasperCompileManager.compileReport(design);
                        Conexion c = new Conexion();
                        JasperPrint print = JasperFillManager.fillReport(report, map, c.c);
                        JasperViewer.viewReport(print, false);
                    } catch (ClassNotFoundException | SQLException | JRException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Error reporte", JOptionPane.ERROR_MESSAGE);
                        ex.printStackTrace();
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione la fecha inicial y final", "Error en selección", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jb_GenerarInformeActionPerformed

    private void jb_FechaFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_FechaFinalActionPerformed
        wdf_FechaFinal.setDate(new Date());
        wdf_FechaFinal.setText((new SimpleDateFormat("dd.MM.yyyy")).format(new Date()));
    }//GEN-LAST:event_jb_FechaFinalActionPerformed

    private void jcb_TipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_TipoItemStateChanged
        String item = jcb_Tipo.getSelectedItem().toString();
        if (item.equals("Tienda")) {
            jl_Nombre.setText(Frm_Principal.idTienda);
            jcb_Datos.setModel(new DefaultComboBoxModel());
            jcb_Datos.setEnabled(false);
            jcb_Datos.setToolTipText("<html>El número de tienda cargado es al cual pertenece el empleado de la sesión</html>");
        } else if (item.equals("Empleado")) {
            jcb_Datos.setModel(dcb_Empleado);
            jcb_Datos.setEnabled(true);
            jcb_Datos.setToolTipText("<html>Seleccione el número de la tienda, sino lo conoce<p>dirijase a la ventana principal y seleccione<p>Buscar -> Empleado</html>");
        } else if (item.equals("Cliente")) {
            jcb_Datos.setModel(dcb_Cliente);
            jcb_Datos.setEnabled(true);
            jcb_Datos.setToolTipText("<html>Seleccione el número de la tienda, sino lo conoce<p>dirijase a la ventana principal y seleccione<p>Buscar -> Cliente</html>");
        }
    }//GEN-LAST:event_jcb_TipoItemStateChanged

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        loadData();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jcb_DatosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_DatosItemStateChanged
        jl_Nombre.setText(jcb_Datos.getSelectedItem().toString());
    }//GEN-LAST:event_jcb_DatosItemStateChanged

    private void jb_FechaActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_FechaActualActionPerformed
        wdf_FechaInicio.setDate(new Date());
        wdf_FechaInicio.setText((new SimpleDateFormat("dd.MM.yyyy")).format(new Date()));
    }//GEN-LAST:event_jb_FechaActualActionPerformed
    public static DefaultComboBoxModel dcb_Empleado;
    public static DefaultComboBoxModel dcb_Cliente;
    private static HashMap<String, String> map;

    private void loadData() {
        map = new HashMap<String, String>(1000);
        ArrayList<String> list = new ArrayList<String>(1000);
        try {
            Conexion c = new Conexion();
            Statement s = c.c.createStatement();
            String sentence = "SELECT * FROM v_infoEmpleado WHERE tienda_idTienda =" + Frm_Principal.idTienda;
            ResultSet r = s.executeQuery(sentence);
            while (r.next()) {
                String doc = r.getString(1);
                String nom = r.getString(8);
                map.put(nom, doc);
                list.add(nom);
            }
            Collections.sort(list);
            dcb_Empleado = new DefaultComboBoxModel(list.toArray());
            list.clear();
            sentence = "SELECT DISTINCT idNumero, nombre FROM v_infoCliente";
            r = s.executeQuery(sentence);
            while (r.next()) {
                String doc = r.getString(1);
                String nom = r.getString(2);
                map.put(nom, doc);
                list.add(nom);
            }
            Collections.sort(list);
            dcb_Cliente = new DefaultComboBoxModel(list.toArray());
            c.c.close();
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jb_FechaActual;
    private javax.swing.JButton jb_FechaFinal;
    private javax.swing.JButton jb_GenerarInforme;
    private javax.swing.JComboBox jcb_Datos;
    private javax.swing.JComboBox jcb_Tipo;
    private javax.swing.JLabel jl_InfoFechaFinal;
    private javax.swing.JLabel jl_InfoFechaInicio;
    private javax.swing.JLabel jl_InfoNombre;
    private javax.swing.JLabel jl_InfoTipo;
    private javax.swing.JLabel jl_Nombre;
    private javax.swing.JPanel jp_Fecha;
    private javax.swing.JPanel jp_Tipo;
    private com.alee.extended.date.WebDateField wdf_FechaFinal;
    private com.alee.extended.date.WebDateField wdf_FechaInicio;
    // End of variables declaration//GEN-END:variables
}
